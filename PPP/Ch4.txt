//4.0.0------------------------
#include "std_lib_facilities.h"

int main()
{
	double Amount = 0.0;
	double CNY_USD = 1 / 6.72;
	double UAH_USD = 1 / 27.02;
	double RUB_USD = 1 / 65.64;
	string Currency = "";
	cout << "*** CNY, UAH, RUB to USD currency converter ***\n"
		<< "\nPlease, enter the amount and currency code (CNY, UAH, RUB):\n";
	cin >> Amount >> Currency;
	if (Currency == "CNY")
		cout << Amount << " CNY = " << Amount * CNY_USD << " USD\n";
	else if (Currency == "UAH")
		cout << Amount << " UAH = " << Amount * UAH_USD << " USD\n";
	else if (Currency == "RUB")
		cout << Amount << " RUB = " << Amount * RUB_USD << " USD\n";
	else
		cout << "No such currency.\n";
	return 0;
}
//4.0.1--------------------------
#include "std_lib_facilities.h"

int main()
{
	double Amount = 0.0;
	double CNY_USD = 1 / 6.72;
	double UAH_USD = 1 / 27.02;
	double RUB_USD = 1 / 65.64;
	double EUR_USD = 1.14;
	double GBP_USD = 1.5;
	char Currency;
	cout << "*** CNY, UAH, RUB, EUR, GBP to USD currency converter ***\n"
		 << "\nPlease, enter the amount and currency code "
		"(c-CNY, u-UAH, r-RUB, e-EUR, g-GBP):\n";
	cin >> Amount >> Currency;
	switch (Currency)
	{
	case 'c':
		cout << Amount << " CNY = " << Amount * CNY_USD << " USD\n";
		break;
	case'u':
		cout << Amount << " UAH = " << Amount * UAH_USD << " USD\n";
		break;
	case 'r':
		cout << Amount << " RUB = " << Amount * RUB_USD << " USD\n";
		break;
	case 'e':
		cout << Amount << " EUR = " << Amount * EUR_USD << " USD\n";
		break;
	case 'g':
		cout << Amount << " GBP = " << Amount * GBP_USD << " USD\n";
		break;
	default: 
		cout << "No such currency.\n";
	}
	return 0;
}
//4.0.2------------------
#include "std_lib_facilities.h"

int main()
{
	char i = 'a';
	while (i <= 'z')
	{
		std::cout << i << '\t' << int(i) << '\n';
		++i;
	}
	return 0;
}
//4.0.3----------------------
#include "std_lib_facilities.h"

int main()
{
	for (char i = '0'; i <= '9'; i++) std::cout << i << '\t' << int(i) << '\n';
	std::cout << '\n';
	for (char i = 'A'; i <= 'Z'; i++) std::cout << i << '\t' << int(i) << '\n';
	std::cout << '\n';
	for (char i = 'a'; i <= 'z'; i++) std::cout << i << '\t' << int(i) << '\n';
	return 0;
}
//4.0.4-------------------------
#include "std_lib_facilities.h"

int square(int x)
{
	int sum = 0;
	for (int i = 0; i < x; i++) sum += x;
	return sum;
}

int main()
{
	int Num;
	cout << "Please, enter positive number: ";
	cin >> Num;
	cout << "\nSquare of " << Num << " is " << square(Num) << "\n";
	return 0;
}
//4.0.5------------------
#include "std_lib_facilities.h"

int main()
{
	vector <string> words;
	string disliked1 = "Broccoli";
	string disliked2 = "Cheaps";
	for (string temp; cin >> temp;)
	{
		(temp == disliked1 || temp == disliked2) ? words.push_back("BLEEP") : words.push_back(temp);
		cout << words[words.size()-1] << "\n";
	}
	return 0;
}
//4.1.0-------------------
#include "std_lib_facilities.h"

int main()
{
	vector <double> Values;
	double value, min, max, to_meter, sum = 0.0;
	string unit;
	bool first_entry = true;
	cout << "Please, enter value and unit (m, cm, in, ft):\n";
	while (cin >> value >> unit)
	{
		if (unit == "m") to_meter = 1.0;
		else if (unit == "cm") to_meter = 0.01;
		else if (unit == "in") to_meter = 0.01 * 2.54;
		else if (unit == "ft") to_meter = 12 * 2.54 * 0.01;
		else to_meter = 0.0;

		if (to_meter != 0.0)
		{
			value *= to_meter;
			if (first_entry)
			{
				min = max = value;
				first_entry = false;
			}
			cout << value << " meters\n";
			if (value > max) max = value;
			if (value < min) min = value;
			Values.push_back(value);
			sum += value;
		}
		else cout << "Unit is unknown. Value ignored.\n";	
	}

	cout << "Minimum value:	" << min
		 << "\nMaximum value:	" << max
		 << "\nSum of values:	" << sum
		 << "\nValues number:	" << Values.size() << "\n\n";
	sort(Values);
	cout << "Values in meters:\n";
	for (double temp : Values)
		cout << temp << "\n";
	return 0;
}
//4.2----------------------
#include "std_lib_facilities.h"

int main()
{
	vector<double> temps;
	double median = 0.0;

	for (double temp; cin >> temp;) 
		temps.push_back(temp);
	sort(temps);
	if (temps.size() % 2 == 1)
		median = temps[temps.size() / 2];
	else if (temps.size() % 2 == 0)
		median = 0.5 * (temps[temps.size() / 2] + temps[temps.size() / 2 - 1]);
	cout << "Median temperature: "<< median << '\n';
	return 0;
}
//4.3---------------------------
#include "std_lib_facilities.h"

int main()
{
	vector <double> Distances;
	double value, min, max, sum = 0.0;
	bool first_entry = true;
	cout << "Please, enter distances between towns:\n";
	while (cin >> value)
	{
		if (first_entry)
		{
			min = max = value;
			first_entry = false;
		}
		if (value > max) max = value;
		if (value < min) min = value;
		Distances.push_back(value);
		sum += value;
	}
	cout << "Minimum distance:	" << min
		<< "\nMaximum distance:	" << max
		<< "\nTotal distance:	" << sum
		<< "\nAverage distance:	" << sum / Distances.size() << '\n';
	return 0;
}
//4.4------------------------
